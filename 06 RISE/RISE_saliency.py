# -*- coding: utf-8 -*-
"""Saliency.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10kZcd31Pj1SnGZ3VIXOyD-m8p7AEKaLn
"""

from __future__ import print_function
from __future__ import division
import torch
import torch.nn as nn
import torch.optim as optim
import numpy as np
import torchvision
from torchvision import datasets, models, transforms
import matplotlib.pyplot as plt

import time
import os
import copy
print("PyTorch Version: ",torch.__version__)
print("Torchvision Version: ",torchvision.__version__)

device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

# Takes in a pretrained model passed through additional FC layers and concatenates this to feature embeddings
# of the metadata passed through FC layers

class PawModel(nn.Module):
    def __init__(self, pretrained_model):
        super(PawModel, self).__init__()
        
        # Call the pretrained model and add FC layer
        self.pretrained_model = pretrained_model
#         self.added_layers = nn.Linear(1024, 512)
        
#         # Pass the metadata through FC layers
#         self.meta_layers = nn.Sequential(nn.Linear(12, 24),
#                                          nn.Linear(24, 48),
#                                          nn.Linear(48, 96))
        
#         # Pass the concatenated embeddings through additional FC layers
#         self.final_layers = nn.Sequential(nn.Linear(608, 120),
#                                          nn.Linear(120, 1),
#                                          nn.ReLU())
        self.added_layers = nn.Linear(1024, 1024)
        
        # Pass the metadata through FC layers
        self.meta_layers = nn.Sequential(nn.Linear(12, 128),
                                         nn.Linear(128, 256),
                                         nn.Linear(256, 512),
                                         nn.Linear(512, 1024))
        
        # Pass the concatenated embeddings through additional FC layers
        self.final_layers = nn.Sequential(nn.Linear(2048, 1024),
                                          nn.Dropout(0.2),
                                          nn.Linear(1024, 512),
                                          nn.Dropout(0.2),
                                          nn.Linear(512, 1),
                                          nn.ReLU())
    
    def forward(self, img, meta):
        # Process the image data
        img_layer = self.pretrained_model(img)
        img_layer = self.added_layers(img_layer)
        
        # Process the meta data
        meta_layer = self.meta_layers(meta)
        
        # Concatenate the image and meta data embeddings and pass through final layers
        final_layer = torch.cat([img_layer, meta_layer], axis = 1)
        final_layer = self.final_layers(final_layer)
        
        return final_layer

paw_model = torch.load(('best_densenet.pth'), map_location=torch.device('cpu'))
paw_model.eval()

"""#DRISE"""

def generate_mask(image_size, grid_size, prob_thresh):
    image_w, image_h = image_size
    grid_w, grid_h = grid_size
    cell_w, cell_h = math.ceil(image_w / grid_w), math.ceil(image_h / grid_h)
    up_w, up_h = (grid_w + 1) * cell_w, (grid_h + 1) * cell_h
    

    mask = (np.random.uniform(0, 1, size=(grid_h, grid_w)) <
            prob_thresh).astype(np.float32)
    
    mask = cv2.resize(mask, (up_w, up_h), interpolation=cv2.INTER_LINEAR)
    offset_w = np.random.randint(0, cell_w)
    offset_h = np.random.randint(0, cell_h)
    mask = mask[offset_h:offset_h + image_h, offset_w:offset_w + image_w]
    mask =np.dstack([mask] * 3)
    mask = torch.permute(torch.tensor(mask),(2,0,1))
    mask = mask[None,:]
    #
    return mask

avg_score = np.array(['878dbfd022bfd06342c024374fc7a777',
       '5c04855bfa7235f492779986c4fab66c',
       'aeae0fc4cd5623efa8d6d2ba422bf6b2',
       'df5a9f783ff2ae373ee99fa33679da64',
       '54d94b0f4fc2bfe05de409928412319e',
       '4ba2e1db28debba31dff900312bca2d6',
       '0bd5374dd7d4b950419b1a8a206e6595',
       '801119ab22c7fa337c1e0186ea05419f',
       '2b7a7c675054623426a94f63d358bcaa',
       '752b8ea52a9107a201d991acd4a0007c',
       'a72a4b44b92ef3cb374287600be7ba55',
       'b60e82fd313066b801fa4431d1ce4f4e',
       '9dad9904a6d88f84aa0bfb82f811a506',
       '899e3ed1742adb578a188df2d6e40562',
       'f7dbbbbb2444eba7232bc785f1c050c3',
       '66aff831ca6d41eece44bade2268a9f5',
       '8b1ff8ec2997f3a3cfd6085ce71ca572',
       'f7b7e071c955d8447444904a4d076550',
       '6b0da7b0a956eb90c7d0c95d6c9e57a6',
       'c279f1e5c7f71c046bd82045fd6bedac',
       '2a5d96b0a4b8b4696f2c2b98b80ebecd',
       '8994f9681ad1bf7b6f200d8440e42f2a',
       '0754b1be915ca4e86ee14eb193f8bc01',
       'f35e594382b4a72a745d2f726d8b0d92',
       'a2c1f071b504550289f9116f52968548',
       '95fdd67ad6542c122f98fb5376840396',
       'b95c7e2f30ea95255abcdc5beab41ba8',
       'e31f170cff01995dc926a3559f412619',
       'ca2689476a4482ed801d07824b561df7',
       'b77cf1e752da7f659edbcefb3ff553ed',
       '8036d7c5d74c67ce7432b47c53e59d37',
       'a188cfda78e8c375bd1909ed71c0ac51',
       '733a827b0d04f612c166e5defd27b4ae',
       '7b4f8a8d9ad9920e5143d0e4c71aaa87',
       '85d2b9e0d2373a6e7de76d4339158588',
       'd0f5effb2a889d38171fdf9cc732789e',
       'fdc1d844dcf01dcb6c1e6affe52b7077',
       'ba1b7354c33a6789d97190384b7d9a10',
       '3c0c585acda38ff8acf8fa00f11ee739',
       '8aafa5da0d3ad53b856446b0afeb68ad',
       '76086f4b38e57d9f15b642ec21ef0295',
       'a06995f3c4cb63b6db4a584e60d361a0',
       '90d77c5fc6d3d180e0f5d8aa75178b28',
       '696beb3baa43f97ae9ef44a53b2dbd42',
       '83cbd41c6a606fececdc7dbe04fb95ee',
       'e375d5fed8249e56e71dbc6676405486',
       '6fbfbb7602dfa549adaac0b71918dd38',
       'd248ce88d89b7825475527b2c99625e1',
       'de461a67e80fce995eec3d21f0d4c1fe',
       'eda539fc68cb39c98dc3bed4bc835fdb',
       '9e6562c333999cfd5d4eae1f613353eb',
       '404e0c795879d658dd6fe3b46eb0afbe',
       '91816c8682b098850e77e1e8685dfa5d',
       'd29f66e828fee9aae475f6c491390443',
       'cda63a81ee0072a5fd35f899aa5fe175',
       'ff1233d348cba9f95ba35679b35e26b6',
       '096a89d2fae53fe670318f7f7f44001b',
       '54ef90ca5972af9ebdb54fb5fcd67552',
       'fa853c0e0d388f9b8ccf87bb2c6c2d5d',
       '0d327ff78570bada703f8855d983712b',
       '09a4ea91c9c54bf50be1d19703f19e6f',
       'e05c7f5d32068ff601d9431e4868487e',
       'e735d033d33a22105a9017fa085c42a5',
       '56a32623b2ad4f32612b2bf4b97e87de',
       '717cbda6038d5173c5a85169432a4b7b',
       '8d2f97ca0b878c765b1efc726ee75acd',
       'd9bbacfac98521b0adef2a09555adcc4',
       '499dab54fd6ecd712894cc898cecb150',
       '2749854307820891fa0c59a8675d6204',
       '75871b719e3b15d3064962876b6c5190',
       'b04e857238d0692dfa2a09e9ac822df3',
       '0c2e546faade3a856a45c02670f968d7',
       'f3ae3123565f631e19cf3bbdda0f03aa',
       'a57cd5158f6d43401ec7c4b94e3de904',
       '9fbc2421ca109c14b029297e3872d8ef',
       '778360d45f7a49ea4989e85a48ee7c3a',
       '13b7b4506a1a1365a256ce02f78aa561',
       '51343064650fa034c293c2adc1fb8923',
       '530517231bd355f4bcf012219bfab8f2',
       '6457a5243b11b87ca9dbb79e5e3cff9b',
       'ee8b538cb2bc87e833abc9c0048ac84c',
       'b37915f3b5687d7cfec3d46d55057bbf',
       'aeb8ada4e5abd613dc9e18a097d9ed9a',
       '2e93c29af0eeb78ce80116ddeac23104',
       '6675e27df657c4b9c3c7b0c85d22bdaf',
       'd962de2b309487b61e01d44ed61f8b04',
       '49938a3aa1a2cd5b723536b76c4728f9',
       '3d109a54b0306f12c043c078a6e3e90c',
       'e18d6f1ef19d5a70e159d11789802e58',
       '0ea022edb8e9ac6cc061f602d00c5eb6',
       '13aff9dd79e84f2c220a9ab587897fe9',
       'd61e49cd1ff16a8fe62f4f8e5c0fedff',
       'd8f2174433d359fab8cb96a521843aab',
       '221b2b852e65fe407ad5fd2c8e9965ef',
       'd46c103dd539d3bafa3f8c2e6270aadc',
       'c94d7148f49bde00714748c73cd532b7',
       '143ecb5619c055a378fb8a51d964db42',
       '7c8ab3f26ff7104abc7e008b8d51b1e9',
       'cb7035c74ceb21a43ec1dcc0144e2d3f',
       '73a3ee2aaefcf02dac27973b536d51b5',
       'f8a9ecc77ab268cec73e2dab1d9c4fd7',
       '869c96be012c1d93d3ecb7e8a6b691c2',
       '6acc51a421d881a16e325a37d1ecdb7a',
       '6a6dd1cce2924cfd6fe79b3cb9aae1a1',
       '220269032df59d9bdbf0e69619002d55',
       'a6416c3d94c30e28dcaa039b5043deec',
       '8099bdad656b35fe7d7759498cfcd525',
       '0337f2ce81eef33554ccabb17e2d8992',
       '9eb3f6de857dc188b3c779e4c8b350b7',
       '7f04d8216c0586c8dba67206b719d142',
       'dcb012f2170e9757604f637a48e6929a',
       'fe5aeb8d9f642e3e5b17fef1245e38e0',
       '91603495131ed3f592ad499091678a73',
       'aa90aad818852ca47177213e5be26709',
       '5890bcbe5839dc9bee96e2a6c30ee457',
       '70ccd8d9c406a1246a607ecb8888e9cb',
       'e961010f15093598be794c451fc114c9',
       '43bd09ca68b3bcdc2b0c549fd309d1ba',
       '5eb95f0853c8b35fcea6c2aefb263963',
       '8fd2222f6980c8781e34182cf1d4395e',
       '787c7fbcc03f72bb4f9500d82e84d2eb',
       '835c6f45c43a30c30222e21d87d80582',
       '12c55c5706b6855fb30533e876304c3e',
       '03a020c7b36cd8572c92da83b6e4f27b',
       'ff9b3b3468c4b35a3b6450a1ddc88449',
       'f212b40b726629abc831bc078d1966eb',
       'df4ca3c5cb028ef81aee2240387b553d',
       '9d467e607c8bda258c65e4bac92b49ff',
       '9bdc07db9f39b5a6da5c0e8388718673',
       '5b3ad9dd26676852ccf36a9a50b25926',
       '61bbf57255c867ab3b3328d122833e2b',
       '8574345d1aa7e03d5f7c4700b8868d87',
       '21cc7dab205bbd08bbe71da3beeaae64',
       'b127a950189438abb47534bd4670ea9a',
       '8ac6b50cdc80aa28f81763dc2fa2570c',
       'e34038841d9ad7cd1feef71409066e2f',
       '5b309362723a65221484444f8c093b7c',
       'b6745a3e80c05c47ceb7ef2738acc9c7',
       '880822d3bcb7145eb395b59dc2e22781',
       '4ff387554d68468af092a3378fc58329',
       'edb2a56aa0b3e9d836dc8592f6285a99',
       '12db1b950a5fc4bf637f9b4d149c37e6',
       '18254fb0566a4b094d93e90d37fc09eb',
       '57f2a1b56085c96ee74b504b9c19fc3f',
       'c9fe1d342620af867c3ed2c413bb9dbd',
       'cddda1f3f2bcb67beb8f6e55f6c906f0',
       'e15f5fdbccf73737ffe6135bfea5370d',
       'b19a4dbba4906138f2d76d5210ccc2cf',
       'b2e2607e1b1eb5ef5df134712ccf8810',
       '5ed72e070597957197d7c2f8b54a15d6',
       '386cc083790137e3197f3b4b3d99b97c',
       '01677db1a9bd1e37386a49cc1d6545a2',
       '478bffbd13ecf2dbccb4fae50220b75a',
       '8687474a0aabddf824d297816e83db05',
       '85df3ecaf4b6f30224c5a5fb794111e9',
       '14ca7fc6329aec72a19a2a1cffc4db7f',
       '3a171ab665827fc068d509c4d9f21fea',
       '05010a08dc04beffa845696c357676df',
       'd3214df162fdee6ca7dab6a247e31b05',
       '68988e5906b6b6829ed7a2d3805c48e7',
       'f6282e6ae0abf9d304bbb5e5056c70a2',
       '7d9dd8f380a3bfd488ba8c43ca4f52b1',
       'ecd36a362338357f67de9ee2a355c7d2',
       'e7b59d3239150739fc1d7ead4b9febd3',
       '9bd2e9de14f08a2804992c22e4fbd5c1',
       '1909302fa9af447bf34298c49bbcdd4a',
       '20d9e31981ab13d991c9e69f715c8566',
       '5b0bc29cd6794dab2ff2fef08afce79a',
       '8064261ce5f7197fdc849641b3192eef',
       'eb60a10665fb28c8963376856cd5fbae',
       'e8e22043e4d727e86c458f3b98fe2e32',
       '8a22c1de080bd8b0339240e80244e971',
       '6eadf03ea41395f63c406c272d88509e',
       '27774b7b6dc6407650676c2526028881',
       '515e363c056fe31c8db4f6079e29c3fb',
       'f827b7c37f6fd7949abb4fc12e7b0b32',
       '7f03ac2d6c6b57ef728e1d884a127608',
       'f6f4cb5044b799dc139301a6eccd9ff8',
       '2a733f2ec3ea62ec9c4259266e1b4767',
       '1785a340c0e0a9d7f5bae3faf28354dd',
       '4708f6747261af730735ff0272cfc73e',
       '34234381195aa7e88fa1ad77d8371c94',
       'c6317a41fd6a796658c555c71655392b',
       '1c8f0cf296057c1caa69cb44112cc00b',
       '37c1664858b8a872873b443f36de13a9',
       'f1fe7c033b59a4acb5f5b4b0cdbe1c62',
       '7fb3916ad59a1f87da25b758e0112ec4',
       '1544c51c2d0a694824c1d7fdb737f960',
       '45adbf9a401f911719252cd3afa0deb0',
       'aa1f8c41659bacffdaca4db6c88210c6',
       'be218697fbf537ff349d54dceb9d36e8',
       'b4a8996a2e8f5c4343bf866267754522',
       '796a61f17861bd0f6a3481689235271c',
       'b60dc1be0039a606969c1d688b869986',
       'b1b82f3f2e63e6da7d0da7889b9b1343',
       'd5055d6dc29fc876ce40278538ff7517',
       'b8983b49b91f373073ce5dbb990232b0',
       '2503ea98674a9f3b327fe57eceb29dd6',
       '2a9858d89826bc41ac41e0b440f236c0',
       'e707fed84d17b26c0286fd4e3f62d0fa'])

low_scores = np.array(['1f55470bdc1f60f6681c9e97868f97ca',
       'a8a859fb8dd237e455e93f4bc2d3918a',
       'd5f8af19eb62b4b0f0363647c43ba733',
       'fb883d38c9f21c49e7b832964d881084',
       'bb0ce400874dd2fde77c2105788a8893',
       'fcee826c9012a174000999d04d55c629',
       'b9d8ddaf5dc09adfddc3f5007cb3f114',
       'f0bc7e48c7dfa9665e02b13a8f52821c',
       '22d14698a4a18ab79db253713c298a05',
       '273d8522a2221d1d8ad0a2f60ac14abe',
       '9474819971b5ced485d5e9528df3cfe0',
       '23d2731f7ba97ddc9b2b7e62dbd16d06',
       'b13ecfa2c822038095cfa8046d0f7e83',
       'f88d414876135479070f2260dc93a59b',
       '86bd505849832f4665bf1f3c5995515f',
       '713387f0041daa87210efdc6510fb1dc',
       '5050dc7c87865a41ddcab8aaa9bc9ae4',
       '7e7921ed945c3c863882340360c9157d',
       'c6824c993b76092a52fbb8a57ff94e37',
       '87082c7c94227cbaa6cc0e8ece8f49fd',
       '4bd8a698f303ce384ae7f94486c97135',
       '73081589e58eb4e91ba8d516b2eab818',
       'ce3c31f422fe79436b1380d3896d0e02',
       '7a6963139dfe7bad4652e5dd560c5b31',
       '6cbca73964b22d569c82180dfab46fe0',
       'f300acf68cd04f4fca3f8d2eecc887b4',
       '9f71e987512b798f4bc196718d7eb1d9',
       '2969cc601f173221a528f8c05571112b',
       'b1839a5890604a26e674ba536a8991f9',
       'dbdbf117c9b2a028ce5773b411720dfc',
       '92740e4e44c2572a43199931789e7166',
       '903c9d54c024b4575b7b360890c444be',
       '803bb1db4f00079a0be91f3319de78f9',
       '50ea6ec9af58dd9f0966e1eae7436ebe',
       '4f27ceb2baf1798ce4f14bd9a290a82c',
       '76420f02afab76d2a6eab95efc816347',
       '11d3ad09f09acf422036ab8368fe44db',
       'd89d171190eb616613632f0180aecb70',
       'd9896c444d85e0882de361ce6bfaebcd',
       '9c01b1f35a946d201aa5cfd761ccb1d6',
       '2ac52920858c86b16642b8dbf44bfb99',
       '93ea840c44849e17e7d876ed772aedfa',
       'b8f920f44800ee71e4659dea84bc9bef',
       'cacd6f1bc88fa1e1b080f0875d72089b',
       '7ba10254b64e21dad13f08311bd288b7',
       '07df2feb88882f2e240306c763d15f26',
       'b7ea2b79695d0b8fb70f734eae86b0da',
       '1fe5b8f82e7e8c0fa0cf0ff5bada400c',
       '14e8fc593665bb46f918421461b64c74',
       '58ca6ecdca7940fac254da35650c1908',
       'b5d6ab0a9b5cbbdb080b245ffbc5a835',
       '6212b8438ce36353ce10f9ea0b4ab0e8',
       '354515560c0f9501e292ffb7ca611daf',
       '6deb37a0ae9f3f0a4107844ef3b27988',
       'fd06639cd39721c16d02896d1e597f7d',
       'f24dd64c39acca1d80b2c6a96046cd28',
       'fa9f629e2f70bfddcd07e63d168c7e35',
       '2b86f94a61491a23e86b12c162b9f4ce',
       '37273b4eb1945d2f17a8058e8fb2a629',
       '2846bc20026340b95d85d6c505123f86',
       '1a31d6c01c9503f894bab595dc04f62c',
       '3040267ae44b265d1d3acbafa9667356',
       'f937696ecd528f5e13b2f4ea0b939bc1',
       '8f2f911b1a45831b038b865a994abb98',
       '8e90e4e9fdedde8659355629e1daa503',
       'b399cdfecf880e5dda931dd0da050295',
       'f5e26210c1c54676d0d6d0f1bbfb30d6',
       '6d64599f680b89231ff935a4e3a094d1',
       'da892cbab6fdb43c490e943c17f7d934',
       '63bc56d35b4780c9c6174f098264bf55',
       'd9a59cf5f9b386ca222cdc348335c143',
       '200bfe4193099b816d033f86ee3092d7',
       '6d639fb891c8c38c0b5ce71f46bea3fc',
       '582eeabd4a448a53ebb79995888a4b0b',
       '44813848352d5b86ac6d854c278c5200',
       'c07d1dc8e2fbe1d8acb0807747df0ab1',
       '5002bcb56c6c00680453ca0628961cb1',
       'd381e39a614bf840c7a372d567f5b27d',
       '0621169e2b2f2a7f051edd692f05a25a',
       '7d1c4750aae2721a847c3f927074e132',
       'b1536305fb2611a4f127e29092d9694a',
       '9a0238499efb15551f06ad583a6fa951',
       'a4d7968823038629c230c8a0f4018305',
       'b39e043547bb6632791e993f2a3c15af',
       'e1039bdbdfabeb88b8d83d9e829f4c6b',
       'c29c3c55569e226ec6bbef8d58b97c8f',
       'd12716540a56941439039983d9d98a3a',
       '8f09a3483668169c9fba5585e2115a29',
       '2948c499d7d3c2febb647ee086c3822c',
       '9a94df24c2ceec0d0c78cc1ebbe51359',
       'adff90b71ab620dc01628e0e7f2342a4',
       '499afdc19d64ecf636dad27a0bc66183',
       'feefa7d5530149a0538313c9815a90ad',
       'a4c0553b1869729e7b3a9ca32e44076a',
       'b49ad3aac4296376d7520445a27726de',
       '32fb50499ca324b5b49ac5b00a63a923',
       '2976e91f00cce1242b076035a0749478',
       '9a1aebf97deeb5d689f1b773435a50e1',
       'fe2693a6dbb149f54afffec48e1f24f1',
       'a2c7637775575f8cd2d312087c882caa',
       'e0a1efdaf4fbed8659b6d23994ee346e',
       'bd48eebc9a9332d0a5aa0d66508a963d',
       '375d496b9862f3c77cca3bb5a0c45616',
       'bf7d7f0d9b936751fe781a002a198ff8',
       'ae5294bf76a1b756cc163def96110019',
       'db01edae7a0eed1bccc7f030bf450bd4',
       '4206c6ee2ad14196973400e093163cc7',
       'efff1eff289b80ace8966e93bb2d6afa',
       '7698362f7f59512504635070521d3494',
       'ac0c13c84d334744934e994fbc15cf8f',
       '6a601b23d765b2a7a18d35a345e723f2',
       '2fc98bf59cad537b1fd12cd54dae70c4',
       '363149488f8d5cc400757063e5308383',
       'ff0fda5f289ae858781f9aa093df3970',
       '01c34389fe155aea3503c914f29881fb',
       '0f734ffd3f32c3975d83dcaa1ef91062',
       '11861df8df1c70348743a461c23ba669',
       'cb3ff16a2d8c51228ce4c131576a2fba',
       '42f9167eebfd24438dc65badbba316e6',
       '872587b5db26e4d66903f17a6597ad66',
       'b6c39c9745997d87549f931395d43fbb',
       '06d012d88c978f3eb5f4a1dcdc6a37e8',
       '1d38f0df86d3b8e3f9bf5489d0cab1cd',
       '6c8c97fe08a2fcf41c9d8d4c41a547d8',
       'f78407456c64b7ab8ac1e047d3f01a1b',
       '8ce02a9915e9e0627d0d9d338377ce53',
       '7cadc06d108b22539659623f92449593',
       '69ce8651ee80e3569e284c9d63e9d472',
       '9270d6bb50ef0a8eb5c36799a929fe7c',
       '42d20ca6f445ad7fd2c8e26727f203c0',
       '456ad7e63018cb0c14edf6c06c3d9754',
       '54563ff51aa70ea8c6a9325c15f55399',
       'd5bdf3446e86ce4ec67ce7a00f1cccc2',
       'b95009c092aab26a98c5cdbd7cd025fe',
       '30147ce48a898ba3d605b398f86ebda5',
       '49f4e77fa71fb673b7f77f90b5e89ed1',
       'fd0f4f709cb19d395c05c46d99facc19',
       '7ac42de38b53682fce62c8afa34dc2bd',
       '85544472859566d530b1c33578fb02f9',
       '6f383b872f8881f6c82c9449842ba081',
       '94b9d00b32d875b103aa8d75db222ad6',
       'bd41e40dbe1b198aba5115df0b33dd69',
       '60228e0873fb96370cb4722a7252e415',
       '7b17abe6ce87ad23d81cf88d1bb81ec2',
       '4c096682359dbe62b1c4de93e1a72946',
       'd41e8327d33ad2a70470141a384bc979',
       'ce2c22615a3e2a2da012aa916da91189',
       '6b3d558edee5e0c4f30512dd71c01ebe',
       'bdbcbd1f7d9cca4bfac2cfa510e344de',
       '7ddbcd828933d1872f08a79d99f92e73',
       '6ca5173eeefb75b55ad3ecbdefd48b29',
       '64a5f5cea1628c311a1fe948d6c9477c',
       'db56a293c25086ba38f801f674c45689',
       '93e336e63e238f3e5ff5991b3198e8de',
       '5e3051021b8f490caecdbee7cdaff9b7',
       'd5a58434857c67df5da99144b833df47',
       '2443118b14c0dcdc38c5d3709a377776',
       'fba53341caac0ef19ff639b3e03f0475',
       '38a31d9c04cc7e35797036cc2bd35774',
       '680721e96fcfb8b858b012eabd1fa1ab',
       '34dc983bbf8b3b102eb268d9f572999b',
       '8185f46097e0c9e56f82e14dc6cd6b51',
       '33d8ecf3770952009073378deee2e868',
       '28dd9734e29580aaf5f56c4a612ef98e',
       'f61eb271ee49f5f183931ef9e5fe7b3a',
       'c108e0d195641875f090da1701475a45',
       '21a40b7dad551ca4d3ae22678ce88a2b',
       '199c56aefe66cc98dc8b43a7a8795844',
       '17486e6dd8ddcef6f6bf543ab09b0bee',
       '1c8284661c5c710cd1bd517d5c3e0f63',
       '33c60b9a510fe33d03473d6b4aa0cf5a',
       'd8f888896d05b09fa2de042ddd163673',
       'fa290d118ab45200ac757a70b020eb3f',
       '0c88efe2fbd7d8b1ce3bfef57b0d6483',
       'bd31dcb0a4cda4b01724a1ea260dd967',
       '13e7a9730f7f0e163a9f47274b43770e',
       '30c840c2525240fe85d838c05ffb933b',
       '383f0177879bb7c8ec6cfd430310d9d8',
       'af8230ad449aae9949b36faaa2f9b970',
       '95c12cb572dc027e2f00243ceb548838',
       '52c15aa2404178fdb3df48fbe49e767f',
       'eec014605cbd2460a9bb164735c720b1',
       '66074f4917e6ae06bc65e6c5e7ef3277',
       '852a955cc2d6b865ed2ad5703f80872d',
       '1f50641b0d57e58920951dd32e08383c',
       'cc7b5cfb3dd8ea87535e5ae22eb856b1',
       'ab348741fbac9d6f5b192831ef75a282',
       '300142daf7f35a750ce14800942477d1',
       'b3de0c3ae03c128cca41b7647a53293b',
       '29e6c6dc75b1e758bf859d9266be7e85',
       'a9a517a427416cd7bffb79a00483b0e2',
       '5526044f14afed83c06b8c12b24e4fd4',
       '85282236b19a84f09c8f0dfe2e94f8cd',
       'bb88b9feed3cb1d9f095769168a76ca5',
       '723cf6fc73b3cd56d777b3595383d2b0',
       '8d53858913501778255cb0c88b9b9178',
       'efbc5160aa9e3479da1ca2be2d246c52',
       'bbba9168154d8e4e57548d765d6a2aa1',
       '84f871e306e9c5c9d88a274ae693ced1',
       '2cb321cc9160eb372e67cf48386bf485'])

high_scores  = np.array(['d0fa3096b3b048f477137f439a7014a7',
       'ef7f96e35710c26e81f67ed29e967193',
       '3afe7c6e9ed321e3219e8d45c1192773',
       'd0b367aa832b8fa6d708cad5d7f41059',
       '6865614b85e0c227a7945a69225d5984',
       '2362b7b2c8c2178e9d004e5bfd7e09bf',
       '8c903cf17ed67b56f568e71ea0939088',
       '3e1d8e6f54731017fd6d1242170aa86b',
       'db29c82ae50a41f3664168eca0916e23',
       'f4d7e243bc99dfe29f6b7c05defd10af',
       '0ac560d090c44554684b9f0e34ebad56',
       '58029f7428a35db19d1c4694465c2de2',
       '6d7ce5f83a2b9cff96a58d80237a54e9',
       'a5a96362f2573c58fd32d25ffb695676',
       '68291db7341eb2b7d2dcea7ed5f4122d',
       '8ffa6bccb3909f2718d53ad47513e557',
       '3549bac0ca0dbcb53be6ec12bd2717a9',
       '3f70d16351d6242851b2ff71365eda9a',
       'ba5130f0d507c1fe346e89c657d6de03',
       '7350d50427f5b78f2169bea2cbdc160a',
       '5685ddaa23cd1d9726892e9e128bf613',
       'ceeb6ddfdeae718eafd511fad7a16fc7',
       '7279df64b5cc81da8e1ed86dbf2ef013',
       '874605f64bce7a2dddc620f382c93ed8',
       'a1304d3c352b23942b6e40bc3ad28ed8',
       '7c0653c3898abe6a69d8b12e43c7b309',
       'c5d8f1dc9a16bbce7d6e0f9337e27934',
       '1d62cd9439bb452390ece13419a1861e',
       'ad1362089c0b9e4a50ea15e2219c2907',
       '38f19ceba149ba0bbc1602211e24c14b',
       'b694201cfab47e39629a11c31c4d10bb',
       '4321c54ffa2603eafe3a9e5a554dde3e',
       '94b2e52746fc017d27ca5f760e6b17eb',
       'afbbb6b6c6a9a49b88d06eda5b74df69',
       '874476d1929aff73c29132245169067b',
       'c442030c2cb499fea349a86768c56db9',
       'dd004ba6daf8991c0598de6b40b66b22',
       'c1e5610529465ff5b9e337f205b7209a',
       '1f53b8750032a6717212ec1956862d1f',
       '5bc3f6d8b348699d587c6479d8ed5ef5',
       'd87810f762081dd515cdf4d189c209b5',
       '019e7f286c9a3bd4d5a66b662b9465ee',
       '99fac9ce233062bb1a9e0b3350d133ac',
       'e74a5d90d6d62720f2d7ca41b71a553e',
       '0254f54b148543442373d5aad45b2d1a',
       '1174178816648eec4473dff8d35ead04',
       'a271899e5a2c6ab13dcb6df7972e9947',
       '42a900a5e064374ad4fcd50e902e388a',
       '14c6725fb7ca7a16ef64a3da47ab0f65',
       '33857326da9557ee620365ef9d61c68f',
       'e3eaccd63e1088ef70fc56f86b5b83da',
       '68db3878e0a313222ed7f26204641028',
       'ab4ef47f4613f32107a264f0346913b2',
       '9d1ded46129d32419def2862f3803165',
       '9c0150c08281a500e8b54f98a969dc1c',
       '8ac008de200d2a3642a75b41be656e96',
       '4ca7601cfe9239b4606c6969c333f159',
       '74e41a94f4b96eace97323b7634e9060',
       '2982b830e84f1d33cfd618887e78d6c6',
       'f5e841dbe4a37954cd762022af45896b',
       '4823f996da355949d2750bb1b4b05c7b',
       '8fc79e934f4a9f6312581d955c0baecb',
       'af47c56a3f81ab8cd16899d36529f725',
       '1fa822769e0e5e7b5bfc16fe0619af73',
       '995dcb0ac1b8ebcdf83f3c88d1c55def',
       'aab7ad4700d53853710b4c4992713b37',
       'bb018056345d6332499b0640196a2359',
       '9672c1a2525baf25ade9b71429fb5f46',
       '3f9cd80b145d8ed45154ed7d7d7d086a',
       'd15f2feadcc11a6ec273e91b408a604c',
       '8452dd238b94aa62c51bb4bddcfed3b5',
       '118ca1a5339f8d6f2794dfc7086ec46a',
       'e6a42bce2898b277475cb4a08481c8f9',
       '013f86ed0e765b189990d3d5ac28bd7d',
       '6af7065779143bbf25c0f9fefc664e41',
       '076486fed936d9fe5bdc24112410d07b',
       '77230a6c1f84bf591858f0ff8c90c5ba',
       'f3bc536f00a320e9203e9ad3c6c078dd',
       '867eba5630d1ebcd6addc32c2c481670',
       '771faad9f05775c4eff77a4be1a4dc1d',
       'bf82028a44815f895c42198fbcb8b037',
       '36f9d138778a89cf0e407dfe76af6e74',
       '7822c1f967388476955def2567734a4d',
       'dfe10a8e3aa0564ff46fa80d0f34b7d0',
       '12f5f4396846c66fb48c2783fdc288d2',
       '48a66727373de4e7fa7bb3331cd9acc8',
       'f34014c26a8d66abcab01e467c5944f8',
       'e838f4e7ac3efdb54c184ddc97695c18',
       'e76f8b59fbbbb6fb8c9e30e4c0c6a108',
       'f0204d25be85b2f56778f25a63d16cef',
       '709acf2879ab3f19e6e44586425f9aea',
       'fb1b85c23f5cc8a079387ff575b67b50',
       '271b6f2cb08cd8d795559403c3f8cd1b',
       '085dab88cb0ad4672ba4782050696ef6',
       '5ec5ae4a559fa603f4878376b81c6e50',
       '34510ef6dfa3950029840337ed45d75b',
       'd90122ddb0755ee4d3cb0b3be756b9bb',
       '51da53f9d11ae4e278284341c12b9d6f',
       '62eb9405ef4fbdd12793e22956988088',
       '5a1079f986b8d914fce142b1b7ad29a2',
       '8ed7f016bfd11c7834270002e97143ca',
       'c3e4453fb60903a6ffd6250d61ef651f',
       '1c95dd06e7e83b9410a85905560c76e1',
       'abb7064e8ffe5a752400b83fafb8017b',
       'b612ba67a7ca7c32f8f9b589547496f0',
       'e14a2b3505c036b96f80133889505d7b',
       'a52149e967ad294387b1c6296417cc18',
       'f26409c9f5fedae715b44cb7fd2168ed',
       'a2bfef4bcd1efdb976beadc65e8837a3',
       '3e49e03d5e33e634a4eb798696d51577',
       'c3214f7072e168d0a2f9ee6b4ddcd3c1',
       '4e5ad4698b3c21560fd20d4575a65dee',
       'f41f974df2735c0446b5720817bb3c6a',
       '82dd92ed7c45fc5020cf89ac4a564d1c',
       'c3212c580d4ce2f6e301e7ee82992565',
       '81583933c4f5e42e014897d7ea433b79',
       '3a83e532dd336ee1e84856feb765908b',
       '9f541f7cc2d8a0ba64d7573701564248',
       '0067aaaa500b530c76b9c91af34b4cb8',
       '8f96aa4d6e029a3c1e8adc6918c1607a',
       '2e9c4ebe736608f559170d5716c517bb',
       '3cfb5023216d1560dfc0b884378cc1a9',
       '4515d6209e0b59e8a41b72e75d3ca29b',
       'cf6e40e6734626da4f6985718a2dacb8',
       'db010c8900095ee6504d111f21538ec6',
       'dc18a06f822536da37e82f48eedd14fb',
       'ed16374e5070a98c543c40f6c65d228b',
       '45088480ee4fc7852aef22be5d30dbfd',
       'c425e7f74dade463807695697b095ad0',
       '463e2b8a0e55605efa93093a4b5f036f',
       '587c58bb1bc45cd903c18a3554b83c72',
       'd4401de267ad533a869da45e35bf1556',
       '50d361bf832674bb5a7c6b7e196a3f56',
       'd0385a621bd4f833f829cb8e442a16df',
       '5258e41f0408847669bffefaaee056ad',
       'ec64e3c4d306213c94db5efd24849b37',
       '95082d3279a044841d6d34f67bfc4c6f',
       'b5857b7aa9f426f11dbda1c4c2fc0b20',
       '075fb8a1c0f70523b122352598dc246e',
       '06f5a4df7ce8c3090f63e8591b524152',
       '1d25ea88a9731004fdef8c3c4d5bfeac',
       '5866337e225f9ccaa9c89a0f0209417d',
       '1becbf260e2e462e93f269807e23d1e6',
       '1cf1455baad20199dfecfc5985eb508d',
       '17a155499581a5209a0bb6bb351b8ece',
       '9601d5e3c5eed99ebba3278327d25eca',
       'ee772918a671f5028ed69aa479651aa6',
       '23b85b9e6e03b514409a1e5bc189c69e',
       '71fa4d85742ba547591ffc91736c1f29',
       '253c8f80a6aef6a2be688bb7c72e21d9',
       'd12ecd92f4c262190aa84af6ed8d147f',
       '972bb4f4577e03ddaa8449a2bb0da7d0',
       'a416af4592a599b3b388fd56ad74e79b',
       '90fe971342e8acffd2935bd8ac4598fb',
       '2cd057ab80a93154aea8cb97f65a2081',
       'c8faf3877371b2566e97c90336ef15f3',
       '0995a828c2c9d795ee3a594755ca653d',
       '53a9354bdaa8d60ef4a25a795ddc23fe',
       '063d79b149f4d163eae86f777a39a42f',
       '27e50397b949ba9556221808cad36cf4',
       'ddcb781947fb436cc479714e9defbb4c',
       '6ad72ac98b14370a9754d0b21e518092',
       '99f3174e9d375705407684403d59a01a',
       'c349f295c02ac04339b3e65c9bccfc57',
       '264094ab88065c59e7172bc1089367e0',
       '88ed510bfabfe22c01ae5c4b6503392a',
       'e7e060720c5a5cadb9f059f7566a63e5',
       'd30ac6b0818b1cc62351a51d0bc9d2de',
       '8135484044485a645bdb500c74cfb895',
       'dacd220c5a138e5c42ba48645cda8bac',
       'c099737ac1fb280fee45e0c138caa8fd',
       'a87022b64fe3b707a66c4c247fd6177a',
       '7860ba1688a0d73302d432d8c69b53da',
       'afa8bc676380d08071f3e18541879d63',
       '82bbc355065237549c4900ae37b02a2c',
       'd46bd657c317c36412b3d2e26bf8d12a',
       '5d1f60a09d22f52a61ba15969c14ce8e',
       '572d54d32a8467ff6a27c8274f200d0b',
       '44fee8158852578264a9ac7b146a9135',
       'e638853bdec13e6cc76b69f169b34740',
       'f3652fe771eedc0256a642256092f6e1',
       'a89fb15d3fc39562358d5cdeb31a5136',
       'e5a84da44afc0abddfbb36907a5ee845',
       '69d4e63e9ab524a95bf8830a45b3fc68',
       '76769dbee1699e04ae1befa3128db7d6',
       '47db2ae009656c7877407dfac9f3a49b',
       'fe200aff478f55ca4bcf77d9dade1217',
       '69eea055aae013f138cec79de61494b6',
       '79382403a5d9b7342632f6d59088aa5e',
       '28e97352c4a2d1967aa45c7f7b461a45',
       '099ca3039b5068de0ae33db0d38e17b4',
       '4cc9cb2a0e034d550e2450e55bc8135f',
       '2fd7cda16cb627069fef31c09d7d6b66',
       'a1c4da5842d088af2d04ba70b1388397',
       '6975e685a5df53d047ad0ed8d2cf92e9',
       'bc7d2b3b519718202e05e1965a64bc5a',
       '41a66dbff7a54b0620b8f3af5d6fb997',
       'd68d07de825adcadc895c52626d7b55f',
       '54fea3ae98640505fd31904e05e2a1ec',
       '185546b046dd9fcdc78fa40708f00cf2'])

import pandas as pd
import cv2
import math
from google.colab.patches import cv2_imshow

name = 'ffaf7bf7e64b9eecaf02fc2c14d6b654'
resol= 224
for i in range(1):
    filepath ='/content/ffaf7bf7e64b9eecaf02fc2c14d6b654.jpg'
    train_img = cv2.imread(filepath)
    print(train_img.shape)

    train_img = cv2.cvtColor(train_img, cv2.COLOR_BGR2RGB)
    image_resized = cv2.resize(train_img, (resol, resol), interpolation = cv2.INTER_AREA)  
    image_resized = torch.permute(torch.tensor(image_resized),(2,0,1)).float()/255
    data = pd.read_csv("/content/drive/MyDrive/petfinder-pawpularity-score/train.csv")
    meta = torch.tensor(np.array((data[data["Id"]==name].iloc[:,[1,2,3,4,5,6,7,8,9,10,11,12]])))
    meta = meta.float()  
    image_resized = image_resized[None,:].float()
    pop =np.array( data[data["Id"]==name].iloc[:,[13]])[0][0]
    print(pop)
    res = torch.zeros((1,3,224,224))
    for k in range(5):
          mask = generate_mask(image_size=(224,224), grid_size=(8,8),prob_thresh=0.5)
          cv2_imshow(mask[0].detach().numpy().transpose(1, 2, 0)*255)
          masked = mask*image_resized
          print(masked.shape)
          cv2_imshow(masked[0].detach().numpy().transpose(1, 2, 0)*255)
          out = paw_model(masked,meta)
          score = (out-pop)**2/100
          res+=(mask*score)
          
    res[0][0] = (res[0][0]-res[0][0].min())/(res[0][0].max()-res[0][0].min())
    res[0][1] = (res[0][1]-res[0][1].min())/(res[0][1].max()-res[0][1].min())
    res[0][2] = (res[0][2]-res[0][2].min())/(res[0][2].max()-res[0][2].min())
    res = 1-res

    res_overlap = res[0]*image_resized
    #plt.imshow((res[0]*image_resized[0]).permute(1, 2, 0).detach().numpy())
    savename = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' +  str(pop) + str(name) + '.jpg' 
    #plt.savefig(res,savename)
    fig, ax = plt.subplots(1, 3)

    ax[0].imshow(image_resized[0].cpu().detach().numpy().transpose(1, 2, 0))
    ax[0].axis('off')
    ax[1].imshow(res[0][0].cpu().detach().numpy(), cmap='hot')
    ax[1].axis('off')
    ax[2].imshow(res_overlap[0].cpu().detach().numpy().transpose(1, 2, 0), cmap='hot')
    ax[2].axis('off')

    plt.tight_layout()
    #fig.suptitle('The Image and Its Saliency Map')
    
    fig.savefig('/content/drive/MyDrive/petfinder-pawpularity-score/train/SaliencyMap/' + str(int(pop))+'_'+ str(name) + '.jpg' )

resol= 224

for i,name in enumerate(high_scores):
  if i ==0 :
    pass
  else:
    print(i)
    filepath = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' + name + '.jpg'
    train_img = cv2.imread(filepath)
    print(train_img.shape)
    train_img = cv2.cvtColor(train_img, cv2.COLOR_BGR2RGB)
    image_resized = cv2.resize(train_img, (resol, resol), interpolation = cv2.INTER_AREA)  
    image_resized = torch.permute(torch.tensor(image_resized),(2,0,1)).float()/255
    data = pd.read_csv("/content/drive/MyDrive/petfinder-pawpularity-score/train.csv")
    meta = torch.tensor(np.array((data[data["Id"]==name].iloc[:,[1,2,3,4,5,6,7,8,9,10,11,12]])))
    meta = meta.float()  
    image_resized = image_resized[None,:].float()
    pop = paw_model(torch.tensor(image_resized),meta)
    res = torch.zeros((1,3,224,224))
    for k in range(500):
          mask = generate_mask(image_size=(224,224), grid_size=(8,8),prob_thresh=0.5)
          masked = mask*image_resized
          out = paw_model(masked,meta)
          score = (out-pop)**2/100
          res+=(mask*score)
          
    res[0][0] = (res[0][0]-res[0][0].min())/(res[0][0].max()-res[0][0].min())
    res[0][1] = (res[0][1]-res[0][1].min())/(res[0][1].max()-res[0][1].min())
    res[0][2] = (res[0][2]-res[0][2].min())/(res[0][2].max()-res[0][2].min())
    res = 1-res

    res_overlap = res[0]*image_resized
    #plt.imshow((res[0]*image_resized[0]).permute(1, 2, 0).detach().numpy())
    savename = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' +  str(pop) + str(name) + '.jpg' 
    #plt.savefig(res,savename)
    fig, ax = plt.subplots(1, 3)

    ax[0].imshow(image_resized[0].cpu().detach().numpy().transpose(1, 2, 0))
    ax[0].axis('off')
    ax[1].imshow(res[0][0].cpu().detach().numpy(), cmap='hot')
    ax[1].axis('off')
    ax[2].imshow(res_overlap[0].cpu().detach().numpy().transpose(1, 2, 0), cmap='hot')
    ax[2].axis('off')

    plt.tight_layout()
    #fig.suptitle('The Image and Its Saliency Map')
    
    fig.savefig('/content/drive/MyDrive/petfinder-pawpularity-score/train/SaliencyMap/' + str(int(pop))+'_'+ str(name) + '.jpg' )

from google.colab import drive
drive.mount('/content/drive')

resol= 8
for i,name in enumerate(high_scores):

    print(i)
    filepath = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' + name + '.jpg'
    train_img = cv2.imread(filepath)
    train_img = cv2.cvtColor(train_img, cv2.COLOR_BGR2RGB)
    image_resized = cv2.resize(train_img, (resol, resol), interpolation = cv2.INTER_AREA)  
    image_resized = torch.permute(torch.tensor(image_resized),(2,0,1)).float()/255
    data = pd.read_csv("/content/drive/MyDrive/petfinder-pawpularity-score/train.csv")
    meta = torch.tensor(np.array((data[data["Id"]==name].iloc[:,[1,2,3,4,5,6,7,8,9,10,11,12]])))
    meta = meta.float()  
    image_resized = image_resized[None,:].float()
    pop = paw_model(torch.tensor(image_resized),meta)
    res = torch.zeros((1,3,224,224))
    for k in range(5):
          mask = generate_mask(image_size=(224,224), grid_size=(8,8),prob_thresh=0.5)
          masked = mask*image_resized
          cv2_imshow(masked)
          out = paw_model(masked,meta)
          score = (out-pop)**2/100
          res+=(mask*score)
          
    res[0][0] = (res[0][0]-res[0][0].min())/(res[0][0].max()-res[0][0].min())
    res[0][1] = (res[0][1]-res[0][1].min())/(res[0][1].max()-res[0][1].min())
    res[0][2] = (res[0][2]-res[0][2].min())/(res[0][2].max()-res[0][2].min())
    res = 1-res

    res_overlap = res[0]*image_resized
    #plt.imshow((res[0]*image_resized[0]).permute(1, 2, 0).detach().numpy())
    savename = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' +  str(pop) + str(name) + '.jpg' 
    #plt.savefig(res,savename)
    fig, ax = plt.subplots(1, 3)

    ax[0].imshow(image_resized[0].cpu().detach().numpy().transpose(1, 2, 0))
    ax[0].axis('off')
    ax[1].imshow(res[0][0].cpu().detach().numpy(), cmap='hot')
    ax[1].axis('off')
    ax[2].imshow(res_overlap[0].cpu().detach().numpy().transpose(1, 2, 0), cmap='hot')
    ax[2].axis('off')

    plt.tight_layout()
    #fig.suptitle('The Image and Its Saliency Map')
    
    fig.savefig('/content/drive/MyDrive/petfinder-pawpularity-score/train/SaliencyMap/' + str(int(pop))+ str(name) + '.jpg' )

for i,name in enumerate(avg_scores):

    print(i)
    filepath = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' + name + '.jpg'
    train_img = cv2.imread(filepath)
    train_img = cv2.cvtColor(train_img, cv2.COLOR_BGR2RGB)
    image_resized = cv2.resize(train_img, (resol, resol), interpolation = cv2.INTER_AREA)  
    image_resized = torch.permute(torch.tensor(image_resized),(2,0,1)).float()/255
    data = pd.read_csv("/content/drive/MyDrive/petfinder-pawpularity-score/train.csv")
    meta = torch.tensor(np.array((data[data["Id"]==name].iloc[:,[1,2,3,4,5,6,7,8,9,10,11,12]])))
    meta = meta.float()  
    image_resized = image_resized[None,:].float()
    pop = paw_model(torch.tensor(image_resized),meta)
    res = torch.zeros((1,3,224,224))
    for k in range(500):
          mask = generate_mask(image_size=(224,224), grid_size=(8,8),prob_thresh=0.5)
          masked = mask*image_resized
          out = paw_model(masked,meta)
          score = (out-pop)**2/100
          res+=(mask*score)
          
    res[0][0] = (res[0][0]-res[0][0].min())/(res[0][0].max()-res[0][0].min())
    res[0][1] = (res[0][1]-res[0][1].min())/(res[0][1].max()-res[0][1].min())
    res[0][2] = (res[0][2]-res[0][2].min())/(res[0][2].max()-res[0][2].min())
    res = 1-res

    res_overlap = res[0]*image_resized
    #plt.imshow((res[0]*image_resized[0]).permute(1, 2, 0).detach().numpy())
    savename = '/content/drive/MyDrive/petfinder-pawpularity-score/train/' +  str(pop) + str(name) + '.jpg' 
    #plt.savefig(res,savename)
    fig, ax = plt.subplots(1, 3)

    ax[0].imshow(image_resized[0].cpu().detach().numpy().transpose(1, 2, 0))
    ax[0].axis('off')
    ax[1].imshow(res[0][0].cpu().detach().numpy(), cmap='hot')
    ax[1].axis('off')
    ax[2].imshow(res_overlap[0].cpu().detach().numpy().transpose(1, 2, 0), cmap='hot')
    ax[2].axis('off')

    plt.tight_layout()
    #fig.suptitle('The Image and Its Saliency Map')
    
    fig.savefig('/content/drive/MyDrive/petfinder-pawpularity-score/train/SaliencyMap/' + str(int(pop))+ str(name) + '.jpg' )